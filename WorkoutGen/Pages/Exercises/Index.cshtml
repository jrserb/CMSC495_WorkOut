@page
@model WorkoutGen.Pages.Exercises.IndexModel

@{
    ViewData["Title"] = "Index";

    string exercise = "Nothing was found";
    int exerciseId = 0;

    if (Model.Exercises.Count() > 0)
    {
        exerciseId = Model.Exercises.First().Id;
        exercise = Model.Exercises.First().Name;
    }

}

<div class="row">
    <div class="col-md-12 text-center">

        <h1 id="exerciseName" data-exercise="@exerciseId">@exercise</h1>
        <div class="row">
            <div class="col-12 text-center">

                <div class="card">
                    <div class="card-body">

                        <button id="btnHowTo" type="button" class="btn btn-primary mb-4" data-toggle="modal" data-target="#modalHowTo">How To</button>

                        <form class="justify-content-center mb-5">

                            <div class="row">
                                <div class="col-2"></div>
                                <div class="col-md-4">
                                    <label for="weight" class="mr-2">Weight:</label>
                                    <input type="number" class="form-control mb-2 d-inline-flex" id="weight">
                                </div>

                                <div class="col-md-4">
                                    <label for="reps" class="mr-2">Reps:</label>
                                    <input type="number" class="form-control" id="reps">
                                </div>
                                <div class="col-2"></div>
                            </div>

                            <div class="row mb-4">
                                <div class="col-2"></div>
                                <div class="col-md-8">
                                    <label for="txtSets">Sets</label>
                                    <textarea class="form-control" id="txtSets" rows="5" readonly style="resize: none;"></textarea>
                                </div>
                                <div class="col-2"></div>
                            </div>

                            <button id="btnAddSet" type="button" class="btn btn-primary mb-4">Add Set</button>

                        </form>

                        <h4>Progress</h4>
                        <div class="progress" style="height: 25px;">
                            <div class="progress-bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>
                        </div>

                    </div>
                    <div class="card-footer">

                        <button id="btnLeft" type="button" class="btn btn-primary float-left w-25">
                            <span class="oi oi-arrow-thick-left"></span>
                        </button>
                        <button id="btnRight" type="button" class="btn btn-primary float-right w-25">
                            <span class="oi oi-arrow-thick-right"></span>
                        </button>

                    </div>
                </div>

            </div>
        </div>

    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="modalHowTo" tabindex="-1" role="dialog" aria-labelledby="modalHowToLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalHowToLabel">How To</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@functions{

    // Sets active class to the first exercise in carousel
    public string GetActiveClass(int index)
    {
        if (index == 0)
            return "active";

        return "";
    }
}

@section Scripts {

    <script>

         // Store globally
        const exercises = @Json.Serialize(Model.Exercises);

    </script>

    <script src="~/js/exercises.js"></script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
