function UpdatePageFromSession(){const n=mergedExercises[sessionExerciseIndex];UpdateExerciseProgressBar(sessionExerciseIndex);ClearSetFields();SetExerciseFields(n);$("#currentExerciseCount").text(sessionExerciseIndex);$("#txtSets").val("");for(var t in sets)if(parseInt(sets[t].exerciseId)===parseInt(n.id)||parseInt(sets[t].userExerciseId)===parseInt(n.id)){const n=$("#txtSets");n.val(n.val()+sets[t].set)}GetLastSetForExercise(n.id);UpdateHowTo(sessionExerciseIndex);UpdateExerciseHistory(n.id)}function UpdateExerciseProgressBar(n){const t=Math.round(n/mergedExercises.length*100);$(".progress-bar").css("width",`${t}%`);$(".progress-bar").text(`${t}%`)}function ClearSetFields(){$("#weight").removeClass("border border-danger");$("#reps").removeClass("border border-danger");$("#weight").val("");$("#reps").val("")}function SetExerciseFields(n){$("#exerciseName").data("exercise",n.id);$("#exerciseName").html(n.name);$("#exerciseName").data("user",!1);n.hasOwnProperty("userId")&&$("#exerciseName").data("user",!0)}function UpdateHowTo(n){const t=mergedExercises[n];GetExerciseMucleGroupEquipment(t.id);$("#howToExercise").text(t.name);$("#howToContent").html(t.description);$("#howToLink").attr("href",t.hyperlink);$("#howToLink").hasClass("d-none")&&$("#howToLink").removeClass("d-none");t.hyperlink||$("#howToLink").addClass("d-none")}function UpdateExerciseHistory(n){if(isUser){const t={type:"POST",url:"/Exercises/GetExerciseHistory",data:{isUserExercise:$("#exerciseName").data("user"),exerciseId:n}};CallController(t,function(n){const i=JSON.parse(n);let t={};$("#modalExerciseHistoryBody").html("");$.each(i.Workouts,function(n,r){if(t=i.Sets.filter(n=>n.UserWorkoutId===r.Id),t.length>0){let n=new Date(r.DateAdded),i=n.getFullYear()+"-"+(n.getMonth()+1)+"-"+n.getDate()+" "+n.getHours()+":"+n.getMinutes()+":"+n.getSeconds();$("#modalExerciseHistoryBody").append(`<h3>${i}</h3>`);$.each(t,function(n,t){$("#modalExerciseHistoryBody").append(`${t.Weight}lbs x ${t.Repetitions} reps<br/>`)})}})})}}function UpdateExerciseSessions(n){const t={type:"POST",url:"/Exercises/UpdateExerciseSessions",data:{isUserExercise:$("#exerciseName").data("user"),exerciseIndex:n}};CallController(t,function(){})}function SetSetsFromSession(n){const t={type:"POST",url:"/Exercises/GetSets",data:{isUserExercise:$("#exerciseName").data("user"),exerciseId:n}};CallController(t,function(n){const t=JSON.parse(n);$("#txtSets").val("");for(var i in t){const n=$("#txtSets");n.val(n.val()+t[i].set)}})}function GetLastSetForExercise(n){if(isUser){const t={type:"POST",url:"/Exercises/GetLastSetForExercise",data:{isUserExercise:$("#exerciseName").data("user"),exerciseId:n}};CallController(t,function(n){const t=JSON.parse(n);t&&($("#weight").val(t.Weight),$("#reps").val(t.Repetitions))})}}function RemoveSetsFromSession(){CallController({type:"POST",url:"/Exercises/RemoveSetsFromSession",data:{}},function(){})}function GetExerciseMucleGroupEquipment(n){const t={type:"POST",url:"/Exercises/GetMuscleGroupsEquipmentFromExercise",data:{isUserExercise:$("#exerciseName").data("user"),exerciseId:n}};CallController(t,function(n){const t=JSON.parse(n);$("#exerciseEditMuscleGroups").html("");$("#exerciseEditEquipment").html("");$("#exerciseEditAlternateEquipment").html("");$.each(t.MuscleGroups,function(n,t){$("#exerciseEditMuscleGroups").append(`<span class="badge badge-dark p-2 m-1">${t.Name}</span>`)});t.Equipment.length===0?$("#exerciseEditEquipment").html("No equipment"):$.each(t.Equipment,function(n,t){$("#exerciseEditEquipment").append(`<span class="badge badge-dark p-2 m-1">${t.Name}</span>`)});t.AlternateEquipment.length===0?$("#exerciseEditAlternateEquipment").html("No alternate equipment"):$.each(t.AlternateEquipment,function(n,t){$("#exerciseEditAlternateEquipment").append(`<span class="badge badge-dark p-2 m-1">${t.Name}</span>`)})})}$(document).ready(function(){UpdatePageFromSession();$("#btnRight").on("click",function(){const i=sessionExerciseIndex,n=i+1;sessionExerciseIndex=n;const t=mergedExercises[n];if($("#currentExerciseCount").text(n),UpdateExerciseProgressBar(n),ClearSetFields(),n===mergedExercises.length){$("#modalEndOfExercise").modal({backdrop:"static",keyboard:!1},"show");return}SetExerciseFields(t);SetSetsFromSession(t.id);GetLastSetForExercise(t.id);UpdateHowTo(n);UpdateExerciseHistory(t.id);UpdateExerciseSessions(n)});$("#btnLeft").on("click",function(){const i=sessionExerciseIndex,n=i-1;sessionExerciseIndex=n;const t=mergedExercises[n];i!==0&&($("#currentExerciseCount").text(n),UpdateExerciseProgressBar(n),ClearSetFields(),SetExerciseFields(t),SetSetsFromSession(t.id),GetLastSetForExercise(t.id),UpdateHowTo(n),UpdateExerciseHistory(t.id),UpdateExerciseSessions(n))});$("#btnAddSet").on("click",function(){const r=parseInt($("#workout").val()),u=parseInt($("#exerciseName").data("exercise")),n=$("#weight").val(),t=$("#reps").val();if($("#weight").removeClass("border border-danger"),$("#reps").removeClass("border border-danger"),!n||!t){$("#weight").addClass("border border-danger");$("#reps").addClass("border border-danger");return}const f={type:"POST",url:"/Exercises/SaveSet",data:{isUserExercise:$("#exerciseName").data("user"),workoutId:r,exerciseId:u,weight:n,reps:t}};CallController(f,function(){});const e=`${n}lbs x ${t} reps
`,i=$("#txtSets");i.val(i.val()+e)});$("#btnClearSet").on("click",function(){$("#weight").val("");$("#reps").val("");$("#txtSets").val("");const n=parseInt($("#exerciseName").data("exercise")),t={type:"POST",url:"/Exercises/ClearSet",data:{isUserExercise:$("#exerciseName").data("user"),exerciseId:n}};CallController(t,function(){})});$("#btnStartOver").on("click",function(){$("#modalEndOfExercise").modal("hide");$("#currentExerciseCount").text(0);UpdateExerciseProgressBar(0);ClearSetFields();SetExerciseFields(mergedExercises[0]);SetSetsFromSession(mergedExercises[0].id);GetLastSetForExercise(mergedExercises[0].id);UpdateHowTo(0);UpdateExerciseHistory(mergedExercises[0].id);sessionExerciseIndex=0;UpdateExerciseSessions(0)});$("#btnEndWorkout").on("click",function(){for(let n=0;n<userExercises.length;n++)$("#formEndWorkout").append(`<input type='hidden' name=userExerciseIds[] value=${userExercises[n].id} />`);for(let n=0;n<exercises.length;n++)$("#formEndWorkout").append(`<input type='hidden' name=exerciseIds[] value=${exercises[n].id} />`);$("#modalEndOfExercise").modal("hide");$("#formEndWorkout").submit()})});